generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Siswa {
  id           Int         @id @default(autoincrement())
  nisn         String      @unique
  nama         String
  jenisKelamin String
  alamat       String
  kelasId      Int
  kelas        Kelas       @relation(fields: [kelasId], references: [id], onDelete: Cascade)
  penilaian    Penilaian[]
  hasil        Hasil[]
}

model Kelas {
  id    Int     @id @default(autoincrement())
  nama  String  @unique
  siswa Siswa[]
}

model Admin {
  id       Int    @id @default(autoincrement())
  nama     String
  username String @unique
  password String
}

model Kriteria {
  id           Int           @id @default(autoincrement())
  namaKriteria String
  jenis        String
  bobotKriteria        Float
  subKriteria  SubKriteria[] // Relasi one-to-many ke SubKriteria
  penilaian    Penilaian[] // Relasi ke Penilaian
}

model SubKriteria {
  id              Int      @id @default(autoincrement())
  namaSubKriteria String
  kriteriaId      Int // Foreign key untuk Kriteria
  kriteria        Kriteria @relation(fields: [kriteriaId], references: [id], onDelete: Cascade)
}

model Penilaian {
  id         Int      @id @default(autoincrement())
  siswaId    Int
  kriteriaId Int
  nilai      Float
  siswa      Siswa    @relation(fields: [siswaId], references: [id], onDelete: Cascade)
  kriteria   Kriteria @relation(fields: [kriteriaId], references: [id], onDelete: Cascade)
}

model Hasil {
  id         Int   @id @default(autoincrement())
  siswaId    Int
  skorAkhir  Float
  skorNormal Float
  siswa      Siswa @relation(fields: [siswaId], references: [id], onDelete: Cascade)
}
